{"version":3,"sources":["components/NavBar.js","components/DeleteTaskModal.js","components/EditTaskModal.js","components/Task.js","components/CompleteGoal.js","components/DeleteModal.js","components/EditGoalModal.js","components/Goal.js","components/Main.js","components/ModalErrors.js","components/SignUp.js","components/Login.js","components/TaskCompleted.js","components/GoalCompleted.js","components/GoalShowPage.js","components/NewGoal.js","components/Completed.js","components/NewTask.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","Navbar","bg","variant","expand","Brand","alt","src","width","height","className","Toggle","aria-controls","Collapse","id","Nav","loggedinUser","to","Link","NavDropdown","title","Item","Divider","onClick","logoutUser","Button","handleGoalModalShow","DeleteModal","Modal","show","onHide","handleDeleteModalClose","Header","closeButton","Title","Body","name","Footer","fetch","method","headers","localStorage","getItem","then","response","json","task","getRemovedTaskId","NewTask","useState","setName","errors","setErrors","editCount","setEditCount","useEffect","readableError","error","errorArray","split","length","trim","slice","Form","onSubmit","e","preventDefault","body","JSON","stringify","exception","handleNewTaskId","Group","controlId","Label","Control","type","placeholder","value","onChange","target","Task","completed","clicked","setClicked","deleteModleOpen","setDeleteModalOpen","editModalShow","setEditModalShow","ListGroup","style","textDecoration","backgroundColor","rgb","Check","custom","completeTask","handleProgressBarChange","defaultChecked","size","CompleteGoal","completeGoal","block","goal","console","log","getCompletedGoalId","NewGoal","description","setDescription","date","setDate","color","setColor","due_date","as","rows","Goal","completedTaskCount","setCompletedTaskCount","completeModalShow","setCompleteModalShow","handleCompleteModalClose","handleEditModalShow","handleEditModalClose","count","tasks","forEach","updateProgress","checkIfCompleted","Accordion","eventKey","ProgressBar","now","Math","ceil","today","Date","calcDaysFromToday","Card","handleClickedGoalId","handleTaskModalShow","map","withRouter","goals","setGoals","completedGoalId","setCompletedGoalId","fetchGoals","removedTaskId","newTaskId","newGoalId","history","push","goalsNotComplete","Container","fluid","Col","Row","borderTop","handleCompleteModalShow","handleGoalClick","renderGoals","LoginErrors","handleErrorClose","username","setUsername","password","setPassword","confirmedPassword","setConfirmedPassword","errorModalShow","setErrorModalShow","padding","user","message","Login","marginBottom","sm","textAlign","Image","rounded","margin","handleSubmit","handleUsernameChange","handlePasswordChange","loggingIn","disabled","Spinner","animation","role","aria-hidden","Text","TaskCompleted","GoalCompleted","display","d","getMonth","getDate","getFullYear","getFormattedDate","completedDate","setGoal","fetchGoal","clickedGoalid","Jumbotron","border","completed_date","handleNewGoalId","toLowerCase","completedGoals","setCompletedGoals","goalsComplete","minHeight","renderCompletedGoals","goal_id","logginError","setLogginError","setLoggedinUser","loggedinUserId","setLoggedinUserId","setClickedGoalid","goalModalShow","setGoalModalShow","taskModalShow","setTaskModalShow","setNewTaskId","setNewGoalId","setRemovedTaskId","setLoggingIn","loginUser","verifyToken","token","setItem","catch","removeItem","exact","path","render","routerProps","goalId","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.0e788adb.chunk.js","sourcesContent":["import React from 'react'\nimport {NavDropdown, Button, Dropdown, Nav, Navbar} from 'react-bootstrap'\nimport { LinkContainer } from \"react-router-bootstrap\";\n\n\nexport default function NavBar(props) {\n\n    const renderDropdown = () => {\n        if (props.loggedinUser) {\n            return (\n                <div id=\"navbar-right\">\n                    <NavDropdown id=\"signed-in-dropdown\" title={props.loggedinUser} >\n                        <LinkContainer to={\"/\"}>\n                            <NavDropdown.Item>Home</NavDropdown.Item>\n                        </LinkContainer>\n                        <LinkContainer to={\"/completed\"}>\n                            <NavDropdown.Item >Completed Goals</NavDropdown.Item>\n                        </LinkContainer>\n                        <NavDropdown.Divider />\n                        <NavDropdown.Item onClick={props.logoutUser}>Logout</NavDropdown.Item>\n                    </NavDropdown>\n                    <Button variant=\"secondary\" onClick={props.handleGoalModalShow}>\n                        New Goal\n                    </Button>\n                </div>\n            )\n        } else {\n            return (\n                <LinkContainer to='/login'><Button variant=\"secondary\">Please Login</Button></LinkContainer>\n            )\n        }\n    }\n\n    return (\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\">\n                <Navbar.Brand>\n                    <img\n                        alt=\"\"\n                        src=\"wilson.png\"\n                        width=\"30\"\n                        height=\"30\"\n                        className=\"d-inline-block align-top\"\n                    />{' '}\n                    Wilson\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        {props.loggedinUser && <LinkContainer to=\"/completed\"><Nav.Link >Completed</Nav.Link></LinkContainer>}\n                    </Nav>\n                    <Nav>\n                        {renderDropdown()}\n                    </Nav>\n                </Navbar.Collapse>\n        </Navbar>\n    )\n}","import React from 'react'\nimport {Modal, Button} from 'react-bootstrap'\n\nexport default function DeleteModal(props) {\n\n    const handleDelete = () => {\n        fetch(`https://wilson-rails.herokuapp.com/tasks/${props.id}`, {\n            method: \"DELETE\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('wilsonUserToken')\n            },\n        })\n        .then(response => response.json())\n        .then(task => {\n            props.getRemovedTaskId(task.id)\n            props.handleDeleteModalClose()\n        })\n    }\n\n\n    return (\n        <Modal show={props.show} onHide={props.handleDeleteModalClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Delete</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Delete \"{props.name}\" Task?</Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"danger\" onClick={handleDelete}>\n                    Confirm\n                </Button>\n                <Button variant=\"secondary\" onClick={props.handleDeleteModalClose}>\n                    Close\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport {Modal, Button, Form} from 'react-bootstrap'\n\n\nexport default function NewTask(props) {\n    \n    const [name, setName] = useState(props.name)\n    const [errors, setErrors] = useState('')\n    const [editCount, setEditCount] = useState(0)\n\n    useEffect(() => {\n        setName(props.name)\n    }, [props.name])\n\n    const handleChange = e => setName(e.target.value)\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        setEditCount(editCount + 1)\n        fetch(`https://wilson-rails.herokuapp.com/tasks/${props.id}`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('wilsonUserToken')\n            },\n            body: JSON.stringify({\n                name: name,\n            })\n        })\n        .then(response => response.json())\n        .then(task => {\n            if (!task.error) {\n                props.handleNewTaskId(editCount)\n                setErrors('')         \n                props.onHide()\n            } else {\n                setErrors(readableError(task.exception))\n            }\n        })\n    }\n\n    const readableError = error => {\n        let errorArray = error.split(':')\n        let untrimmedError = errorArray[errorArray.length - 1]\n        let wellGroomedError = untrimmedError.trim().slice(0, -1)\n        return wellGroomedError\n    }\n\n    return (\n        <Modal show={props.show} onHide={props.onHide}>\n            <Modal.Header closeButton>\n            <Modal.Title>Edit Task</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form onSubmit={handleSubmit}>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Task:</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Enter Task\" name={'task'} value={name} onChange={handleChange} />\n                    </Form.Group>\n                    <div className=\"button-error-container\">\n                        <Button variant=\"primary\" type=\"submit\" >\n                            Submit\n                        </Button>\n                        <div className='error' >{errors}</div>                        \n                    </div>\n                </Form>\n            </Modal.Body>               \n        </Modal>\n    )\n}","\nimport React, { useState, useEffect }  from 'react'\nimport {ListGroup, Form, Button} from 'react-bootstrap'\nimport DeleteTaskModal from './DeleteTaskModal'\nimport EditTaskModal from './EditTaskModal'\n\nexport default function Task(props) {\n\n    const [clicked, setClicked] = useState(props.completed)\n    const [completeModalShow, setCompleteModalShow] = useState(false)\n    const [deleteModleOpen, setDeleteModalOpen] = useState(false)\n    const [editModalShow, setEditModalShow] = useState(false)\n\n    const handleDeleteModalShow = () => setDeleteModalOpen(true)\n    const handleDeleteModalClose = () => setDeleteModalOpen(false)\n    const handleEditModalShow = () => setEditModalShow(true)\n    const handleEditModalClose = () => setEditModalShow(false)\n\n    const handleCheckClick = id => {\n        props.completeTask(id)\n        setClicked(!clicked)\n        if (clicked === true) {\n            props.handleProgressBarChange(-1)\n        } else {\n            props.handleProgressBarChange(1)\n        }\n    }\n\n    return (\n        <div>\n            <EditTaskModal handleNewTaskId={props.handleNewTaskId} id={props.id} onHide={handleEditModalClose} name={props.name} show={editModalShow} />\n            <DeleteTaskModal getRemovedTaskId={props.getRemovedTaskId} handleNewTaskId={props.handleNewTaskId} id={props.id} handleDeleteModalClose={handleDeleteModalClose} name={props.name} show={deleteModleOpen} />\n            <ListGroup.Item className='task' style={{textDecoration: clicked ? 'line-through' : '', backgroundColor: props.rgb }} >\n                <div className='task-body'>\n                    <div className='task-content'>\n                        <Form.Check \n                            custom\n                            onClick={() => handleCheckClick(props.id)}\n                            defaultChecked={props.completed}\n                            id={props.id}\n                            className=\"check\"\n                        />\n                        {props.name}                        \n                    </div>\n\n                    <div className='task-buttons'>\n                        <Button className='edit-task-button' variant=\"secondary\" size=\"sm\" onClick={handleEditModalShow}>\n                            Edit\n                        </Button>\n                        <Button className='delete-task-button' variant=\"danger\" size=\"sm\" onClick={handleDeleteModalShow}>\n                            Remove\n                        </Button>\n                    </div>\n\n                </div>\n            </ListGroup.Item>\n        </div>\n    )\n}\n\n// textDecoration: props.completeTaskids.includes(props.id) ? 'line-through' : ''","import React from 'react'\nimport {Modal, Button} from 'react-bootstrap'\n\n\nexport default function CompleteGoal(props) {\n\n    return (\n        <Modal show={props.show} onHide={props.onHide}>\n            <Modal.Header closeButton>\n            <Modal.Title>{`Congrats!! You Completed the SOMEGOAL`}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>Would you like to mark this goal as complete?</Modal.Body>\n            <Modal.Footer>\n            <Button variant=\"primary\" onClick={() => props.completeGoal(props.id)} block>\n                Complete\n            </Button>\n\n            </Modal.Footer>\n        </Modal>\n    )\n}","import React from 'react'\nimport {Modal, Button} from 'react-bootstrap'\n\nexport default function DeleteModal(props) {\n\n    const handleDelete = () => {\n        fetch(`https://wilson-rails.herokuapp.com/goals/${props.id}`, {\n            method: \"DELETE\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('wilsonUserToken')\n            },\n        })\n        .then(response => response.json())\n        .then(goal => {\n            console.log(goal)\n            props.getCompletedGoalId(goal.id)\n            props.handleDeleteModalClose()\n        })\n    }\n\n\n    return (\n        <Modal show={props.show} onHide={props.handleDeleteModalClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Delete</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Delete \"{props.name}\" Goal?</Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"danger\" onClick={handleDelete}>\n                    Confirm\n                </Button>\n                <Button variant=\"secondary\" onClick={props.handleDeleteModalClose}>\n                    Close\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport {Form, Button, Modal} from 'react-bootstrap'\n\nexport default function NewGoal(props) {\n\n    const [name, setName] = useState('')\n    const [description, setDescription] = useState('')\n    const [date, setDate] = useState('')\n    const [errors, setErrors] = useState('')\n    const [color, setColor] = useState('red') \n    const [editCount, setEditCount] = useState(0)\n\n    const handleNameChange = e => setName(e.target.value)\n    const handleDescriptionChange = e => setDescription(e.target.value)\n    const handleDateChange = e => setDate(e.target.value)\n    const handleColorChange = e => setColor(e.target.value)\n\n    useEffect(() => {\n        setName(props.name)\n        setDescription(props.description)\n        setDate(props.due_date)\n        setColor(props.color)\n    }, [props.name, props.description, props.due_date, props.color])\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        setEditCount(editCount + 1)\n        fetch(`https://wilson-rails.herokuapp.com/goals/${props.id}`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('wilsonUserToken')\n            },\n            body: JSON.stringify({\n                name: name,\n                description: description,\n                due_date: date,\n                rgb: color\n            })\n        })\n        .then(response => response.json())\n        .then(goal => {\n            if (!goal.error) {\n                props.getCompletedGoalId(editCount)\n                console.log(goal)\n                setErrors('')         \n                props.onHide()\n            } else {\n                setErrors(readableError(goal.exception))\n            }\n        })\n    }\n\n    const readableError = error => {\n        let errorArray = error.split(':')\n        let untrimmedError = errorArray[errorArray.length - 1]\n        let wellGroomedError = untrimmedError.trim().slice(0, -1)\n        return wellGroomedError\n    }\n\n    return (\n        <Modal show={props.show} onHide={props.onHide}>\n            <Modal.Header closeButton >\n            <Modal.Title>Edit Goal</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form onSubmit={handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Goal Name:</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Goal Name\" value={name} onChange={handleNameChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Goal Description</Form.Label>\n                        <Form.Control as=\"textarea\" rows={5} value={description} onChange={handleDescriptionChange}/>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Complete Goal By: </Form.Label>\n                        <Form.Control type=\"date\" onChange={handleDateChange} value={date}/>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                        <Form.Label>Color</Form.Label>\n                        <Form.Control as=\"select\" onChange={handleColorChange} value={color}>\n                            <option>red</option>\n                            <option>orange</option>\n                            <option>yellow</option>\n                            <option>green</option>\n                            <option>blue</option>\n                            <option>purple</option>\n                            <option>pink</option>\n                            <option>white</option>\n                            <option>black</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <div className=\"button-error-container\">\n                        <Button variant=\"primary\" type=\"submit\" >\n                            Submit\n                        </Button>\n                        <div className='error' >{errors}</div>                        \n                    </div>\n                </Form>\n            </Modal.Body>               \n        </Modal>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport {Accordion, Card, Button, ProgressBar, ListGroup, Navbar, Nav, Container} from 'react-bootstrap'\nimport Task from './Task'\nimport CompleteGoal from './CompleteGoal'\nimport DeleteModal from './DeleteModal'\nimport EditGoalModal from './EditGoalModal'\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nexport default function Goal(props) {\n\n    const [completedTaskCount, setCompletedTaskCount] = useState(0)\n    const [completeModalShow, setCompleteModalShow] = useState(false)\n    const [deleteModleOpen, setDeleteModalOpen] = useState(false)\n    const [editModalShow, setEditModalShow] = useState(false)\n\n    const handleCompleteModalShow = () => setCompleteModalShow(true)\n    const handleCompleteModalClose = () => setCompleteModalShow(false)\n    const handleDeleteModalShow = () => setDeleteModalOpen(true)\n    const handleDeleteModalClose = () => setDeleteModalOpen(false)\n\n    const handleEditModalShow = () => setEditModalShow(true)\n    const handleEditModalClose = () => setEditModalShow(false)\n\n    useEffect(() => {\n        let count = 0\n        props.tasks.forEach(task => {\n            if (task.completed) {\n                count ++\n            }\n        })\n        setCompletedTaskCount(count)\n    }, [])\n\n    const handleProgressBarChange = value => {\n        setCompletedTaskCount(completedTaskCount + value)\n    }\n    \n    const updateProgress = () => {\n        let count = completedTaskCount\n        let taskCount = props.tasks.length\n        let ratio =  (count / taskCount)\n        return ratio * 100\n    }\n\n    const checkIfCompleted = () => {\n        if (updateProgress() === 100) {\n            handleCompleteModalShow()\n        }\n    }\n    \n    useEffect(() => {\n        updateProgress()\n        checkIfCompleted()\n    }, [completedTaskCount])\n\n    const completeGoal = (id) => {\n        fetch(`https://wilson-rails.herokuapp.com/complete-goal/${id}`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('wilsonUserToken')\n            }\n        })\n        .then(response => response.json())\n        .then(goal => {\n            if (goal.completed) {\n                handleCompleteModalClose()\n                props.getCompletedGoalId(goal.id)\n            }\n        })\n    }\n\n\n    let calcDaysFromToday = (date) => {\n        let today = new Date()\n        let dayToCalc = new Date(date)\n        return (dayToCalc - today) / 1000 / 60 / 60 / 24\n    }\n\n\n\n    const renderTasks = () => {\n        return props.tasks.map(task => {\n            return <Task getRemovedTaskId={props.getRemovedTaskId} handleNewTaskId={props.handleNewTaskId} handleProgressBarChange={handleProgressBarChange} completeTask={props.completeTask} completed={task.completed} rgb={props.rgb} id={task.id} name={task.name} key={task.id}/>\n        })\n    }\n\n    return (\n        <div>\n            <EditGoalModal getCompletedGoalId={props.getCompletedGoalId} id={props.id} due_date={props.due_date} name={props.name} date={props.date} description={props.description} color={props.rgb} handleEditModalClose={handleEditModalClose} onHide={handleEditModalClose} handleEditModalShow={handleEditModalShow} show={editModalShow} />\n            <DeleteModal getCompletedGoalId={props.getCompletedGoalId} id={props.id} handleDeleteModalClose={handleDeleteModalClose} name={props.name} show={deleteModleOpen} />\n            <CompleteGoal id={props.id} completeGoal={completeGoal} show={completeModalShow} onHide={handleCompleteModalClose}  />\n            <Accordion >\n                <Accordion.Toggle className='goal-listgroup' style={{ backgroundColor: props.rgb}} eventKey={props.id} as={ListGroup.Item} >\n                    <div className=\"goal\" >\n                        <div className='goal-name'>\n                            {props.name}\n                        </div>\n                            <ProgressBar style={{backgroundColor: \"white\", color: props.rgb}} now={updateProgress()} />\n                        <div className=\"goal-due\">\n                            {props.due_date && <small>Due in {Math.ceil(calcDaysFromToday(props.due_date) + 1)} days</small>}\n                        </div>\n                    </div>\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey={props.id}>\n                    <Card.Body className=\"goal-body\" onClick={() => props.handleClickedGoalId(props.id)}>\n\n                    <Navbar expand=\"md\" className=\"justify-content-center\">\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                        <Navbar.Collapse id=\"basic-navbar-nav\" className=\"goal-navbar\">\n                            <Nav.Item>\n                                <LinkContainer to=\"goal-showpage\">\n                                    <Button variant=\"secondary\">Show</Button>\n                                </LinkContainer>                                    \n                            </Nav.Item>\n                            <Nav.Item><Button variant=\"primary\" onClick={props.handleTaskModalShow}>Add Task</Button></Nav.Item>\n                            <Nav.Item><Button variant=\"secondary\" onClick={handleEditModalShow}>Edit</Button></Nav.Item>\n                            <Nav.Item><Button variant=\"danger\" onClick={handleDeleteModalShow}>Delete</Button></Nav.Item>\n                        </Navbar.Collapse>\n                    </Navbar>\n                            \n                        {renderTasks()}\n\n                    </Card.Body>\n                </Accordion.Collapse>\n            </Accordion>\n        </div>\n    )\n}","import React, {useState, useEffect} from 'react'\nimport {Container, Row, Col, ListGroup, Button} from 'react-bootstrap'\nimport { withRouter } from 'react-router-dom';\nimport Goal from './Goal'\n\n\nfunction Main(props) {\n\n    const [goals, setGoals] = useState([])\n    const [completedGoalId, setCompletedGoalId] = useState()\n\n\n    const getCompletedGoalId = id => setCompletedGoalId(id)\n    useEffect(() => {\n        fetchGoals()\n    }, [])\n\n    useEffect(() => {\n        fetchGoals()\n    }, [props.removedTaskId])\n\n    useEffect(() => {\n        fetchGoals()\n    }, [props.newTaskId])\n\n    useEffect(() => {\n        fetchGoals()\n    }, [props.newGoalId])\n    \n\n    useEffect(() => {\n        fetchGoals()\n    }, [completedGoalId])\n\n    const fetchGoals = () => {\n        fetch(`https://wilson-rails.herokuapp.com/goals`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('wilsonUserToken')\n            }\n        })\n        .then(response => response.json())\n        .then(goals => {\n            if (goals.error) {\n                props.history.push('/login')\n            } else {\n                let goalsNotComplete = []\n                goals.forEach(goal => {\n                    if (!goal.completed) {\n                        goalsNotComplete.push(goal)\n                    }\n                })\n                setGoals(goalsNotComplete)\n            }\n        })\n    }\n\n    let renderGoals = () => {\n        if (goals.length > 0) {\n            return goals.map(goal => {\n                return <Goal getRemovedTaskId={props.getRemovedTaskId} description={goal.description} handleNewTaskId={props.handleNewTaskId} due_date={goal.due_date} getCompletedGoalId={getCompletedGoalId} handleCompleteModalShow={props.handleCompleteModalShow} completeTask={props.completeTask} handleClickedGoalId={props.handleClickedGoalId} tasks={goal.tasks} handleTaskModalShow={props.handleTaskModalShow}  rgb={goal.rgb} id={goal.id} handleGoalClick={props.handleGoalClick} date={goal.date} name={goal.name} key={goal.id} />\n            })\n        }\n    }\n\n    const renderMainTitle = () => {\n        if (goals.length === 0) {\n            return (\n                <Col id='main-title-container'>\n                    <h1>Click </h1>\n                        <Button variant=\"secondary\" id='main-title-button' onClick={props.handleGoalModalShow}>New Goal</Button>\n                    <h1>to create a Goal!</h1>                   \n                    </Col>\n            )\n        } else {\n            return (\n            <Col id='main-title-container'>\n                <h1>{goals.length === 1 ? goals.length + ' Goal Remaining!' : goals.length + ' Goals Remaining'}</h1>\n            </Col>                \n            )\n\n        }\n    }\n\n    return (\n        <Container fluid className=\"main\">\n            \n                {renderMainTitle()}\n            \n            <Row>\n            <Col>\n                <hr style={{borderTop: \"3px solid white\"}}/>\n                <ListGroup>\n                    {renderGoals()}\n                </ListGroup>\n            </Col>\n                \n            </Row>\n        </Container>\n    )\n}\nexport default withRouter(Main);","import React from 'react'\nimport {Modal, Button} from 'react-bootstrap'\n\nexport default function LoginErrors(props) {\n\n\n\n    return (\n        <Modal show={props.show} onHide={props.handleErrorClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Error:</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>{props.errors}</Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={props.handleErrorClose}>\n                    Close\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n","import React, { useState } from 'react'\nimport ModalErrors from './ModalErrors'\nimport {Container, Row, Col, Form, Button} from 'react-bootstrap'\nimport { withRouter } from 'react-router-dom';\n\n\nfunction SignUp(props) {\n\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmedPassword, setConfirmedPassword] = useState('')\n    const [errors, setErrors] = useState('')\n    const [errorModalShow, setErrorModalShow] = useState(false)\n\n    const handleUsernameChange = e => setUsername(e.target.value)\n    const handlePasswordChange = e => setPassword(e.target.value)\n    const handleConfirmedPasswordChange = e => setConfirmedPassword(e.target.value)\n\n    const handleErrorShow = () => setErrorModalShow(true)\n    const handleErrorClose = () => setErrorModalShow(false)\n\n    const onSubmit = e => {\n        e.preventDefault()\n        fetch(\"https://wilson-rails.herokuapp.com/users\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username: username,\n                password: password,\n            })\n        })\n        .then(response => response.json())\n        .then(user => {\n            if (user.message) {\n                props.history.push('/login')\n            } else {\n                setErrors(readableError(user.exception))\n                handleErrorShow()\n            }\n        })\n    }\n\n    const readableError = error => {\n        let errorArray = error.split(':')\n        let untrimmedError = errorArray[errorArray.length - 1]\n        let wellGroomedError = untrimmedError.trim().slice(0, -1)\n        return wellGroomedError\n    }\n\n    return (\n        <div>\n            <ModalErrors show={errorModalShow} handleErrorClose={handleErrorClose} errors={errors}/>\n            <Container style={{backgroundColor: '#333', color: 'white', padding: '3%'}}>\n                <Row>\n                    <Col>\n                        <Form onSubmit={onSubmit}>\n                        \n                            <Form.Group >\n                                <Form.Label>Create Username:</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter username\" value={username} onChange={handleUsernameChange} />\n                            </Form.Group>\n\n                            <Form.Group >\n                                <Form.Label>Password:</Form.Label>\n                                <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={handlePasswordChange} />\n                            </Form.Group>\n\n                            <Form.Group >\n                                <Form.Label>Re-enter password:</Form.Label>\n                                <Form.Control type=\"password\" placeholder=\"Re-enter password\" value={confirmedPassword} onChange={handleConfirmedPasswordChange} />\n                            </Form.Group>\n\n                            <Button variant=\"primary\" type=\"submit\">\n                                Sign Up\n                            </Button>\n\n                        </Form>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default withRouter(SignUp);","import React from 'react'\n\nimport {Form, Button, Container, Row, Col, Image, Spinner} from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\n\n\nexport default function Login(props) {\n\n    \n\n    \n    return (\n        <div>\n\n            <Container style={{backgroundColor: '#333', color: 'white', padding: '3%'}}>\n                <Row style={{marginBottom: \"3%\"}}>\n                    <Col sm={4} style={{textAlign: \"center\"}}>   \n                    <Image style={{height: \"200px\", width: \"200px\"}} src=\"wilson.png\" rounded />\n                    </Col>\n\n                    <Col sm={8} style={{margin: 'auto 0'}}>\n                        <h1>Welcome to <span style={{color: 'rgb(214, 17, 18)'}}>Wilson</span></h1>\n\n                        <h5>A simple app to keep track of your goals</h5>\n                    </Col>\n\n                </Row>\n                <Row>\n                    <Col id='login-container'>\n                        <Form onSubmit={props.handleSubmit} id='login-form'>\n                            <Form.Group controlId=\"username\">\n                            <Form.Label>Username:</Form.Label>\n                            <Form.Control type=\"username\" placeholder=\"Enter username\" name={'username'} value={props.username} onChange={props.handleUsernameChange} />\n                            </Form.Group>\n                            <Form.Group controlId=\"formBasicPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control type=\"password\" placeholder=\"Password\" name={'password'} value={props.password} onChange={props.handlePasswordChange} />\n                            </Form.Group>\n                            <div className=\"button-link-container\">\n                                {props.loggingIn ?   <Button variant=\"primary\" disabled><Spinner as=\"span\" animation=\"grow\" size=\"sm\" role=\"status\" aria-hidden=\"true\" /> Loading...</Button> : <Button id={'login-button'} variant=\"primary\" type=\"submit\">Login</Button>}\n                                <Form.Text className=\"text-muted\">\n                                    Not registered? <Link to='/signup'>Create an account</Link>\n                                </Form.Text>\n                            </div>\n                        </Form>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n    \n}\n","import React, { useState, useEffect }  from 'react'\nimport {ListGroup} from 'react-bootstrap'\n\n\nexport default function TaskCompleted(props) {\n    return (\n        <ListGroup.Item className='task' style={{  backgroundColor: props.rgb }} >\n            <div className=\"task-body-complete\">\n                {props.name}\n            </div>\n        </ListGroup.Item>\n    )\n}\n","import React from 'react'\nimport {Accordion, Card, Button, ProgressBar, ListGroup} from 'react-bootstrap'\nimport TaskCompleted from './TaskCompleted'\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nexport default function GoalCompleted(props) {\n\n    const renderCompletedTasks = () => {\n        return props.tasks.map(task => {\n            return <TaskCompleted key={task.id} name={task.name} rgb={props.rgb}/>\n        })\n    }\n\n    function getFormattedDate(d) {\n        var date = new Date(d);\n        var month = date.getMonth() + 1;\n        var day = date.getDate() + 1;\n        var year = date.getFullYear();\n        return month + \"/\" + day + \"/\" + year;\n    }\n\n    return (\n        <div style={{ padding: '0px', display: \"inline-block\"}}>\n            <Accordion>\n                <Accordion.Toggle style={{ backgroundColor: props.rgb}} className='goal-listgroup' eventKey={props.id} as={ListGroup.Item}>\n                    <div className=\"goal\" >\n                            <div className='goal-name'>\n                                {props.name}\n                            </div>\n\n                            <div className=\"goal-due\">\n                                Completed on: {getFormattedDate(props.completedDate)}\n                            </div>\n                    </div>\n\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey={props.id}>\n                    <Card.Body onClick={() => props.handleClickedGoalId(props.id)}>\n                            <LinkContainer to=\"goal-showpage\">\n                                <Button variant=\"danger\" >\n                                    Show\n                                </Button>\n                            </LinkContainer>\n                            \n                                \n                        {renderCompletedTasks()}\n\n                    </Card.Body>\n                </Accordion.Collapse>\n            </Accordion>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom';\nimport {Container, Row, Col, Jumbotron, Button, ListGroup} from 'react-bootstrap'\n\nimport Goal from './Goal'\nimport GoalCompleted from './GoalCompleted'\n\n\nfunction GoalShowPage(props) {\n\n    const [goal, setGoal] = useState('')\n\n    const [completedGoalId, setCompletedGoalId] = useState('')\n\n    const getCompletedGoalId = id => setCompletedGoalId(id)\n\n    useEffect(() => {\n        if (completedGoalId !== '') {\n            props.history.push('/')\n        }\n    }, [completedGoalId])\n\n    useEffect(() => {\n        fetchGoal()\n    }, [props.newTaskId])\n\n    const fetchGoal = () => {\n        fetch(`https://wilson-rails.herokuapp.com/goals/${props.clickedGoalid}`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('wilsonUserToken')\n            }\n        })\n        .then(response => response.json())\n        .then(goal => {\n            setGoal(goal)\n        })\n    }\n\n    const renderGoal = () => {\n        if (goal.completed) {\n            return <GoalCompleted key={goal.id} completedDate={goal.completed_date} handleClickedGoalId={props.handleClickedGoalId} tasks={goal.tasks} name={goal.name} id={goal.id} rgb={goal.rgb} />\n        } else {\n            return <Goal getCompletedGoalId={getCompletedGoalId} completeTask={props.completeTask} handleClickedGoalId={props.handleClickedGoalId} id={goal.id} tasks={goal.tasks} rgb={goal.rgb} name={goal.name} handleTaskModalShow={props.handleTaskModalShow} />\n        }\n    }\n\n    return (\n        <Container fluid style={{backgroundColor: '#333', padding: '50px'}}>\n            <Row>\n                <Col>\n                    <Jumbotron style={{ border: `solid ${goal.rgb} 4px`}}>\n                        <h1>{goal.name}</h1>\n                        <p>{goal.description}</p>\n                    </Jumbotron>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <ListGroup>\n                        {goal ? renderGoal() : null}\n                    </ListGroup>\n                </Col>\n\n            </Row>\n        </Container>\n    )    \n}\nexport default withRouter(GoalShowPage)","import React, { useState } from 'react'\nimport {Form, Button, Modal} from 'react-bootstrap'\n\nexport default function NewGoal(props) {\n\n    const [name, setName] = useState('')\n    const [description, setDescription] = useState('')\n    const [date, setDate] = useState('')\n    const [errors, setErrors] = useState('')\n    const [color, setColor] = useState('red') \n\n    const handleNameChange = e => setName(e.target.value)\n    const handleDescriptionChange = e => setDescription(e.target.value)\n    const handleDateChange = e => setDate(e.target.value)\n    const handleColorChange = e => setColor(e.target.value.toLowerCase())\n\n    const onSubmit = e => {\n        e.preventDefault()\n        fetch(\"https://wilson-rails.herokuapp.com/goals\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('wilsonUserToken')\n            },\n            body: JSON.stringify({\n                name: name,\n                description: description,\n                due_date: date,\n                rgb: color\n            })\n        })\n        .then(response => response.json())\n        .then(goal => {\n            console.log(goal)\n            if (!goal.error) {\n                props.handleNewGoalId(goal.id)\n                setName('')\n                setDescription('')\n                setDate('')\n                setErrors('')\n                props.onHide()\n            } else {\n                setErrors(readableError(goal.exception))\n            }\n        })\n    }\n\n    const readableError = error => {\n        let errorArray = error.split(':')\n        let untrimmedError = errorArray[errorArray.length - 1]\n        let wellGroomedError = untrimmedError.trim().slice(0, -1)\n        return wellGroomedError\n    }\n\n    return (\n        <Modal show={props.show} onHide={props.onHide}>\n            <Modal.Header closeButton >\n            <Modal.Title>New Goal</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form onSubmit={onSubmit}>\n                    <Form.Group>\n                        <Form.Label>Goal Name:</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Goal Name\" value={name} onChange={handleNameChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Goal Description</Form.Label>\n                        <Form.Control as=\"textarea\" rows={5} value={description} onChange={handleDescriptionChange}/>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Complete Goal By: </Form.Label>\n                        <Form.Control type=\"date\" onChange={handleDateChange} value={date} />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                        <Form.Label>Color</Form.Label>\n                        <Form.Control as=\"select\" onChange={handleColorChange}>\n                            <option>Red</option>\n                            <option>Orange</option>\n                            <option>Yellow</option>\n                            <option>Green</option>\n                            <option>Blue</option>\n                            <option>Purple</option>\n                            <option>Pink</option>\n                            <option>White</option>\n                            <option>Black</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <div className=\"button-error-container\">\n                        <Button variant=\"primary\" type=\"submit\" >\n                            Submit\n                        </Button>\n                        <div className='error' >{errors}</div>                        \n                    </div>\n                </Form>\n            </Modal.Body>               \n        </Modal>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport {Container, Row, Col, ListGroup} from 'react-bootstrap'\nimport GoalCompleted from './GoalCompleted'\nimport { withRouter } from 'react-router-dom';\n\nfunction Completed(props) {\n\n    const [completedGoals, setCompletedGoals] = useState([])\n\n    useEffect(() => {\n        fetchGoals()\n    }, [])\n\n    const fetchGoals = () => {\n        fetch(`https://wilson-rails.herokuapp.com/goals`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('wilsonUserToken')\n            }\n        })\n        .then(response => response.json())\n        .then(goals => {\n            if (goals.error) {\n                props.history.push('/login')\n            } else {\n                let goalsComplete = []\n                goals.forEach(goal => {\n                    if (goal.completed) {\n                        goalsComplete.push(goal)\n                    }\n                })\n            setCompletedGoals(goalsComplete)\n        }\n        })\n    }\n\n\n    const renderCompletedGoals = () => {\n        if (completedGoals.length > 0) {\n            return completedGoals.map(goal => {\n                return <GoalCompleted key={goal.id} completedDate={goal.completed_date} handleClickedGoalId={props.handleClickedGoalId} tasks={goal.tasks} name={goal.name} id={goal.id} rgb={goal.rgb} />\n            })\n        }\n    }\n    \n    return (\n        <Container fluid style={{backgroundColor: '#333', color: 'white', padding: '3%', minHeight: \"80vh\", width: \"100%\"}}>\n            <Col id='completed-title-container'>\n                <h1>Completed</h1>\n            </Col>\n\n            <Row>\n                <Col>\n                    <hr style={{borderTop: \"3px solid white\"}}/>\n                    <ListGroup>\n                        {renderCompletedGoals()}\n                    </ListGroup>\n                </Col>\n                \n            </Row>\n        </Container>\n    )        \n    \n}\n\nexport default withRouter(Completed);","import React, { useState } from 'react'\nimport {Modal, Button, Form} from 'react-bootstrap'\n\n\nexport default function NewTask(props) {\n    \n    const [name, setName] = useState('')\n    const [errors, setErrors] = useState('')\n\n    const handleChange = e => setName(e.target.value)\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        fetch(`https://wilson-rails.herokuapp.com/tasks`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('wilsonUserToken')\n            },\n            body: JSON.stringify({\n                name: name,\n                goal_id: props.clickedGoalid\n            })\n        })\n        .then(response => response.json())\n        .then(task => {\n            if (!task.error) {\n                props.handleNewTaskId(task.id)\n                setName('')\n                setErrors('')         \n                props.onHide()\n            } else {\n                setErrors(readableError(task.exception))\n            }\n        })\n    }\n\n    const readableError = error => {\n        let errorArray = error.split(':')\n        let untrimmedError = errorArray[errorArray.length - 1]\n        let wellGroomedError = untrimmedError.trim().slice(0, -1)\n        return wellGroomedError\n    }\n\n    return (\n        <Modal show={props.show} onHide={props.onHide}>\n            <Modal.Header closeButton>\n            <Modal.Title>New Task</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form onSubmit={handleSubmit}>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Task:</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Enter Task\" name={'task'} value={name} onChange={handleChange} />\n                    </Form.Group>\n                    <div className=\"button-error-container\">\n                        <Button variant=\"primary\" type=\"submit\" >\n                            Submit\n                        </Button>\n                        <div className='error' >{errors}</div>                        \n                    </div>\n                </Form>\n            </Modal.Body>               \n        </Modal>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Route, withRouter } from 'react-router-dom';\nimport NavBar from './components/NavBar'\nimport Main from './components/Main'\nimport SignUp from './components/SignUp'\nimport Login from './components/Login'\nimport GoalShowPage from './components/GoalShowPage'\nimport NewGoal from './components/NewGoal'\nimport Completed from './components/Completed'\nimport NewTask from './components/NewTask'\nimport ModalErrors from './components/ModalErrors'\n\n\nfunction App(props) {\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [logginError, setLogginError] = useState(null)\n  const [loggedinUser, setLoggedinUser] = useState(null)\n  const [loggedinUserId, setLoggedinUserId] = useState(null)\n  const [clickedGoalid, setClickedGoalid] = useState('')\n  const [goalModalShow, setGoalModalShow] = useState(false)\n  const [taskModalShow, setTaskModalShow] = useState(false)\n  const [errorModalShow, setErrorModalShow] = useState(false)\n  const [newTaskId, setNewTaskId] = useState('')\n  const [newGoalId, setNewGoalId] = useState('')\n  const [removedTaskId, setRemovedTaskId] = useState(0)\n  const [loggingIn, setLoggingIn] = useState(false)  \n\n  const getRemovedTaskId = id => setRemovedTaskId(id)\n  \n  const handleTaskModalShow = () => setTaskModalShow(true)\n  const handleTaskModalClose = () => setTaskModalShow(false)\n  \n  const handleGoalModalShow = () => setGoalModalShow(true)\n  const handleGoalModalClose = () => setGoalModalShow(false)\n  \n  const handleUsernameChange = e => setUsername(e.target.value)\n  const handlePasswordChange = e => setPassword(e.target.value)\n  const handleClickedGoalId = id => setClickedGoalid(id)\n  const handleNewTaskId = id => setNewTaskId(id)\n  const handleNewGoalId = id => setNewGoalId(id)\n\n  const handleErrorClose = () => setErrorModalShow(false);\n  const handleErrorShow = () => setErrorModalShow(true);\n  \n\n\n  const logoutUser = () => {\n    setLoggedinUser(null)\n    localStorage.removeItem('wilsonUserToken')\n    props.history.push('/login')\n  }\n\n\n  useEffect(() => {\n    let storage = localStorage.getItem('wilsonUserToken')\n    if (storage) {\n      props.history.push('/')\n    } else {\n      props.history.push('/login')\n    }\n  }, [])\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    loginUser()\n  }\n\n  const verifyToken = token => {\n    if (token.token) {\n      localStorage.setItem('wilsonUserToken', token.token)\n      setLoggedinUserId(token.id)\n      setLogginError('')\n      props.history.push('/')\n      setUsername('')\n      setPassword('')\n      setLoggingIn(false)\n    } else {\n      setLogginError(token.message)\n      handleErrorShow()\n      setPassword('')\n      setLoggingIn(false)\n    }\n  }\n\n  const loginUser = () => {\n    fetch('https://wilson-rails.herokuapp.com/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({username, password}),\n    })\n    .then(response => response.json())\n    .then(token => {\n      verifyToken(token)\n    })\n    .catch((error) => setLogginError(error));\n    setLoggingIn(true)\n\n  }\n\n  useEffect(() => {\n    fetch(`https://wilson-rails.herokuapp.com/user`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': \"bearer \" + localStorage.getItem('wilsonUserToken')\n      }\n    })\n    .then(response => response.json())\n    .then(user => setLoggedinUser(user.username))\n  }, [loggedinUserId])\n\n  const completeTask = id => {\n    fetch(`https://wilson-rails.herokuapp.com/complete-task/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': \"bearer \" + localStorage.getItem('wilsonUserToken')\n      }\n    })\n  }\n\n\n  return (\n    <div>\n          <NavBar handleGoalModalShow={handleGoalModalShow} logoutUser={logoutUser} loggedinUser={loggedinUser}/>\n          <Route exact path=\"/login\" render={(routerProps) => <Login loggingIn={loggingIn} handleSubmit={handleSubmit} username={username} password={password} handleUsernameChange={handleUsernameChange} handlePasswordChange={handlePasswordChange} loggedinUser={loggedinUser} {...routerProps}/>} />\n          <Route exact path=\"/signup\" render={() => <SignUp />} />\n\n          <ModalErrors show={errorModalShow} handleErrorClose={handleErrorClose} errors={logginError} />\n          <NewTask handleNewTaskId={handleNewTaskId} show={taskModalShow} onHide={handleTaskModalClose} goalId={props.id} clickedGoalid={clickedGoalid} />\n          <NewGoal handleNewGoalId={handleNewGoalId} onHide={handleGoalModalClose} show={goalModalShow} loggedinUser={loggedinUser}/>\n          <Route exact path=\"/\" render={() => <Main removedTaskId={removedTaskId} getRemovedTaskId={getRemovedTaskId} handleNewTaskId={handleNewTaskId} newGoalId={newGoalId} newTaskId={newTaskId} completeTask={completeTask} handleClickedGoalId={handleClickedGoalId} handleTaskModalShow={handleTaskModalShow} handleGoalModalShow={handleGoalModalShow} />} />\n          <Route exact path=\"/goal-showpage\" render={() => <GoalShowPage completeTask={completeTask} newTaskId={newTaskId} handleClickedGoalId={handleClickedGoalId} handleTaskModalShow={handleTaskModalShow} clickedGoalid={clickedGoalid} />} />\n          <Route exact path=\"/completed\" render={() => <Completed handleClickedGoalId={handleClickedGoalId} loggedinUser={props.loggedinUser} handleGoalClick={props.handleGoalClick}/>} />     \n    </div>\n  );\n} \nexport default withRouter(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}><App /></Router>, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}