{"version":3,"sources":["components/NavBar.js","components/DeleteTaskModal.js","components/EditTaskModal.js","components/Task.js","components/CompleteGoal.js","components/DeleteModal.js","components/EditGoalModal.js","components/Goal.js","components/Main.js","components/SignUp.js","components/Login.js","components/TaskCompleted.js","components/GoalCompleted.js","components/GoalShowPage.js","components/NewGoal.js","components/Completed.js","components/NewTask.js","components/ModalErrors.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","Navbar","bg","variant","expand","Brand","alt","src","width","height","className","Toggle","aria-controls","Collapse","id","Nav","loggedinUser","to","Link","NavDropdown","title","Item","Divider","onClick","logoutUser","Button","handleGoalModalShow","DeleteModal","Modal","show","onHide","handleDeleteModalClose","Header","closeButton","Title","Body","name","Footer","fetch","method","headers","localStorage","getItem","then","response","json","task","getRemovedTaskId","NewTask","useState","setName","errors","setErrors","editCount","setEditCount","useEffect","Form","onSubmit","e","preventDefault","body","JSON","stringify","handleNewTaskId","Group","controlId","Label","Control","type","placeholder","value","onChange","target","Task","completed","clicked","setClicked","deleteModleOpen","setDeleteModalOpen","editModalShow","setEditModalShow","ListGroup","style","textDecoration","backgroundColor","rgb","Check","custom","completeTask","handleProgressBarChange","defaultChecked","size","CompleteGoal","completeGoal","block","error","setError","goal","getCompletedGoalId","catch","console","log","NewGoal","description","setDescription","date","setDate","color","setColor","due_date","as","rows","Goal","completedTaskCount","setCompletedTaskCount","completeModalShow","setCompleteModalShow","handleCompleteModalClose","handleEditModalShow","handleEditModalClose","count","tasks","forEach","updateProgress","length","checkIfCompleted","Accordion","eventKey","ProgressBar","now","Math","ceil","today","Date","calcDaysFromToday","Card","handleClickedGoalId","handleTaskModalShow","map","withRouter","goals","setGoals","completedGoalId","setCompletedGoalId","loading","setLoading","fetchGoals","removedTaskId","newTaskId","newGoalId","history","push","goalsNotComplete","Container","fluid","Col","Spinner","animation","Row","borderTop","handleCompleteModalShow","handleGoalClick","renderGoals","username","setUsername","password","setPassword","confirmedPassword","setConfirmedPassword","signUpShow","handleSignUpClose","backdrop","keyboard","centered","password_confirmation","user","setLoggedinUserId","loginUser","disabled","role","aria-hidden","Login","setSignUpShow","padding","marginBottom","sm","textAlign","Image","rounded","margin","handleSubmit","handleUsernameChange","handlePasswordChange","loggingIn","TaskCompleted","GoalCompleted","display","d","getMonth","getDate","getFullYear","getFormattedDate","completedDate","setGoal","fetchGoal","clickedGoalid","Jumbotron","border","completed_date","handleNewGoalId","toLowerCase","completedGoals","setCompletedGoals","goalsComplete","minHeight","renderCompletedGoals","goal_id","LoginErrors","handleErrorClose","logginError","setLogginError","setLoggedinUser","loggedinUserId","setClickedGoalid","goalModalShow","setGoalModalShow","taskModalShow","setTaskModalShow","errorModalShow","setErrorModalShow","setNewTaskId","setNewGoalId","setRemovedTaskId","setLoggingIn","verifyToken","token","setItem","message","removeItem","exact","path","render","routerProps","goalId","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.f0befcd2.chunk.js","sourcesContent":["import React from 'react'\nimport {NavDropdown, Button, Dropdown, Nav, Navbar} from 'react-bootstrap'\nimport { LinkContainer } from \"react-router-bootstrap\";\n\n\nexport default function NavBar(props) {\n\n    const renderDropdown = () => {\n        if (props.loggedinUser) {\n            return (\n                <Nav className=\"justify-content-end\">\n                    <NavDropdown id=\"signed-in-dropdown\" title={props.loggedinUser} >\n                        <LinkContainer to={\"/\"}>\n                            <NavDropdown.Item>Home</NavDropdown.Item>\n                        </LinkContainer>\n                        <LinkContainer to={\"/completed\"}>\n                            <NavDropdown.Item >Completed Goals</NavDropdown.Item>\n                        </LinkContainer>\n                        <NavDropdown.Divider />\n                        <NavDropdown.Item onClick={props.logoutUser}>Logout</NavDropdown.Item>\n                    </NavDropdown>\n                    <Button variant=\"secondary\" onClick={props.handleGoalModalShow}>\n                        New Goal\n                    </Button>\n                </Nav>\n            )\n        } else {\n            return (\n                <LinkContainer to='/login'><Button variant=\"secondary\">Please Login</Button></LinkContainer>\n            )\n        }\n    }\n\n    return (\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\">\n                <Navbar.Brand>\n                    <img\n                        alt=\"\"\n                        src=\"wilson.png\"\n                        width=\"30\"\n                        height=\"30\"\n                        className=\"d-inline-block align-top\"\n                    />{' '}\n                    Wilson\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        {props.loggedinUser && <LinkContainer to=\"/completed\"><Nav.Link >Completed</Nav.Link></LinkContainer>}\n                    </Nav>\n                    <Nav>\n                        {renderDropdown()}\n                    </Nav>\n                </Navbar.Collapse>\n        </Navbar>\n    )\n}","import React from 'react'\nimport {Modal, Button} from 'react-bootstrap'\n\nexport default function DeleteModal(props) {\n\n    const handleDelete = () => {\n        fetch(`https://wilson-rails.herokuapp.com/tasks/${props.id}`, {\n            method: \"DELETE\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('wilsonUserToken')\n            },\n        })\n        .then(response => response.json())\n        .then(task => {\n            props.getRemovedTaskId(task.id)\n            props.handleDeleteModalClose()\n        })\n    }\n\n\n    return (\n        <Modal show={props.show} onHide={props.handleDeleteModalClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Delete</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Delete \"{props.name}\" Task?</Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"danger\" onClick={handleDelete}>\n                    Confirm\n                </Button>\n                <Button variant=\"secondary\" onClick={props.handleDeleteModalClose}>\n                    Close\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport {Modal, Button, Form} from 'react-bootstrap'\n\n\nexport default function NewTask(props) {\n    \n    const [name, setName] = useState(props.name)\n    const [errors, setErrors] = useState({})\n    const [editCount, setEditCount] = useState(0)\n\n    useEffect(() => {\n        setName(props.name)\n    }, [props.name])\n\n    const handleChange = e => setName(e.target.value)\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        setEditCount(editCount + 1)\n        fetch(`https://wilson-rails.herokuapp.com/tasks/${props.id}`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('wilsonUserToken')\n            },\n            body: JSON.stringify({\n                name: name,\n            })\n        })\n        .then(response => response.json())\n        .then(task => {\n            if (task.errors) {\n                setErrors(task.errors)\n            } else {\n                props.handleNewTaskId(editCount)\n                setErrors({})         \n                props.onHide()\n            }\n        })\n    }\n\n    return (\n        <Modal show={props.show} onHide={props.onHide}>\n            <Modal.Header closeButton>\n            <Modal.Title>Edit Task</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form onSubmit={handleSubmit}>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Task:</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Enter Task\" name={'task'} value={name} onChange={handleChange} />\n                        {errors.name && <p className=\"signup-error\">{errors.name[0]}</p>}\n                    </Form.Group>\n                    <div className=\"button-error-container\">\n                        <Button variant=\"primary\" type=\"submit\" >\n                            Submit\n                        </Button>\n                    </div>\n                </Form>\n            </Modal.Body>               \n        </Modal>\n    )\n}","\nimport React, { useState, useEffect }  from 'react'\nimport {ListGroup, Form, Button} from 'react-bootstrap'\nimport DeleteTaskModal from './DeleteTaskModal'\nimport EditTaskModal from './EditTaskModal'\n\nexport default function Task(props) {\n\n    const [clicked, setClicked] = useState(props.completed)\n    const [completeModalShow, setCompleteModalShow] = useState(false)\n    const [deleteModleOpen, setDeleteModalOpen] = useState(false)\n    const [editModalShow, setEditModalShow] = useState(false)\n\n    const handleDeleteModalShow = () => setDeleteModalOpen(true)\n    const handleDeleteModalClose = () => setDeleteModalOpen(false)\n    const handleEditModalShow = () => setEditModalShow(true)\n    const handleEditModalClose = () => setEditModalShow(false)\n\n    const handleCheckClick = id => {\n        props.completeTask(id)\n        setClicked(!clicked)\n        if (clicked === true) {\n            props.handleProgressBarChange(-1)\n        } else {\n            props.handleProgressBarChange(1)\n        }\n    }\n\n    return (\n        <div>\n            <EditTaskModal handleNewTaskId={props.handleNewTaskId} id={props.id} onHide={handleEditModalClose} name={props.name} show={editModalShow} />\n            <DeleteTaskModal getRemovedTaskId={props.getRemovedTaskId} handleNewTaskId={props.handleNewTaskId} id={props.id} handleDeleteModalClose={handleDeleteModalClose} name={props.name} show={deleteModleOpen} />\n            <ListGroup.Item className='task' style={{textDecoration: clicked ? 'line-through' : '', backgroundColor: props.rgb }} >\n                <div className='task-body'>\n                    <div className='task-content'>\n                        <Form.Check \n                            custom\n                            onClick={() => handleCheckClick(props.id)}\n                            defaultChecked={props.completed}\n                            id={props.id}\n                            className=\"check\"\n                        />\n                        {props.name}                        \n                    </div>\n\n                    <div className='task-buttons'>\n                        <Button className='edit-task-button' variant=\"secondary\" size=\"sm\" onClick={handleEditModalShow}>\n                            Edit\n                        </Button>\n                        <Button className='delete-task-button' variant=\"danger\" size=\"sm\" onClick={handleDeleteModalShow}>\n                            Delete\n                        </Button>\n                    </div>\n\n                </div>\n            </ListGroup.Item>\n        </div>\n    )\n}\n\n// textDecoration: props.completeTaskids.includes(props.id) ? 'line-through' : ''","import React from 'react'\nimport {Modal, Button} from 'react-bootstrap'\n\n\nexport default function CompleteGoal(props) {\n\n    return (\n        <Modal show={props.show} onHide={props.onHide}>\n            <Modal.Header closeButton>\n            <Modal.Title>{`Congrats!! You Completed the SOMEGOAL`}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>Would you like to mark this goal as complete?</Modal.Body>\n            <Modal.Footer>\n            <Button variant=\"primary\" onClick={() => props.completeGoal(props.id)} block>\n                Complete\n            </Button>\n\n            </Modal.Footer>\n        </Modal>\n    )\n}","import React, {useState, useEffect} from 'react'\nimport {Modal, Button} from 'react-bootstrap'\n\nexport default function DeleteModal(props) {\n\n    const [error, setError] = useState(false)\n\n    const handleDelete = () => {\n        fetch(`https://wilson-rails.herokuapp.com/goals/${props.id}`, {\n            method: \"DELETE\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('wilsonUserToken')\n            },\n        })\n        .then(response => response.json())\n        .then(goal => {\n\n            props.getCompletedGoalId(goal.id)\n            props.handleDeleteModalClose()\n        })\n        .catch(error => {\n            console.log(error)\n            setError(true)\n        })\n    }\n\n    const handleClose = () => {\n        props.handleDeleteModalClose()\n        setError(false)\n    }\n\n\n    return (\n        <Modal show={props.show} onHide={props.handleDeleteModalClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Delete</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>{`Delete \"${props.name}\" Goal?`}</Modal.Body>\n            <Modal.Footer>\n\n                {error ? <div className='error' >Please delete all Tasks associated with this Goal to confirm.</div> : <Button variant=\"danger\" onClick={handleDelete}>Confirm</Button>}  \n\n                <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\n\n            </Modal.Footer>\n        </Modal>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport {Form, Button, Modal} from 'react-bootstrap'\n\nexport default function NewGoal(props) {\n\n    const [name, setName] = useState('')\n    const [description, setDescription] = useState('')\n    const [date, setDate] = useState('')\n    const [errors, setErrors] = useState({})\n    const [color, setColor] = useState('red') \n    const [editCount, setEditCount] = useState(0)\n\n    const handleNameChange = e => setName(e.target.value)\n    const handleDescriptionChange = e => setDescription(e.target.value)\n    const handleDateChange = e => setDate(e.target.value)\n    const handleColorChange = e => setColor(e.target.value)\n\n    useEffect(() => {\n        setName(props.name)\n        setDescription(props.description)\n        setDate(props.due_date)\n        setColor(props.color)\n    }, [props.name, props.description, props.due_date, props.color])\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        setEditCount(editCount + 1)\n        fetch(`https://wilson-rails.herokuapp.com/goals/${props.id}`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('wilsonUserToken')\n            },\n            body: JSON.stringify({\n                name: name,\n                description: description,\n                due_date: date,\n                rgb: color\n            })\n        })\n        .then(response => response.json())\n        .then(goal => {\n            if (goal.errors) {\n                setErrors(goal.errors)\n            } else {\n                props.getCompletedGoalId(editCount)\n                setErrors({})      \n                props.onHide()\n            }\n        })\n    }\n\n    return (\n        <Modal show={props.show} onHide={props.onHide}>\n            <Modal.Header closeButton >\n            <Modal.Title>Edit Goal</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form onSubmit={handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Goal Name:</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Goal Name\" value={name} onChange={handleNameChange} />\n                        {errors.name && <p className=\"signup-error\">{errors.name[0]}</p>}\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Goal Description</Form.Label>\n                        <Form.Control as=\"textarea\" rows={5} value={description} onChange={handleDescriptionChange}/>\n                        {errors.description && <p className=\"signup-error\">{errors.description[0]}</p>}\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Complete Goal By: </Form.Label>\n                        <Form.Control type=\"date\" onChange={handleDateChange} value={date}/>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                        <Form.Label>Color</Form.Label>\n                        <Form.Control as=\"select\" onChange={handleColorChange} value={color}>\n                            <option>red</option>\n                            <option>orange</option>\n                            <option>yellow</option>\n                            <option>green</option>\n                            <option>blue</option>\n                            <option>purple</option>\n                            <option>pink</option>\n                            <option>white</option>\n                            <option>black</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <div className=\"button-error-container\">\n                        <Button variant=\"primary\" type=\"submit\" >\n                            Submit\n                        </Button>\n                    </div>\n                </Form>\n            </Modal.Body>               \n        </Modal>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport {Accordion, Card, Button, ProgressBar, ListGroup, Navbar, Nav, Container} from 'react-bootstrap'\nimport Task from './Task'\nimport CompleteGoal from './CompleteGoal'\nimport DeleteModal from './DeleteModal'\nimport EditGoalModal from './EditGoalModal'\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nexport default function Goal(props) {\n\n    const [completedTaskCount, setCompletedTaskCount] = useState(0)\n    const [completeModalShow, setCompleteModalShow] = useState(false)\n    const [deleteModleOpen, setDeleteModalOpen] = useState(false)\n    const [editModalShow, setEditModalShow] = useState(false)\n\n    const handleCompleteModalShow = () => setCompleteModalShow(true)\n    const handleCompleteModalClose = () => setCompleteModalShow(false)\n    const handleDeleteModalShow = () => setDeleteModalOpen(true)\n    const handleDeleteModalClose = () => setDeleteModalOpen(false)\n\n    const handleEditModalShow = () => setEditModalShow(true)\n    const handleEditModalClose = () => setEditModalShow(false)\n\n    useEffect(() => {\n        let count = 0\n        props.tasks.forEach(task => {\n            if (task.completed) {\n                count ++\n            }\n        })\n        setCompletedTaskCount(count)\n    }, [])\n\n    const handleProgressBarChange = value => {\n        setCompletedTaskCount(completedTaskCount + value)\n    }\n    \n    const updateProgress = () => {\n        let count = completedTaskCount\n        let taskCount = props.tasks.length\n        let ratio =  (count / taskCount)\n        return ratio * 100\n    }\n\n    const checkIfCompleted = () => {\n        if (updateProgress() === 100) {\n            handleCompleteModalShow()\n        }\n    }\n    \n    useEffect(() => {\n        updateProgress()\n        checkIfCompleted()\n    }, [completedTaskCount])\n\n    const completeGoal = (id) => {\n        fetch(`https://wilson-rails.herokuapp.com/complete-goal/${id}`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('wilsonUserToken')\n            }\n        })\n        .then(response => response.json())\n        .then(goal => {\n            if (goal.completed) {\n                handleCompleteModalClose()\n                props.getCompletedGoalId(goal.id)\n            }\n        })\n    }\n\n\n    let calcDaysFromToday = (date) => {\n        let today = new Date()\n        let dayToCalc = new Date(date)\n        return (dayToCalc - today) / 1000 / 60 / 60 / 24\n    }\n\n\n\n    const renderTasks = () => {\n        return props.tasks.map(task => {\n            return <Task getRemovedTaskId={props.getRemovedTaskId} handleNewTaskId={props.handleNewTaskId} handleProgressBarChange={handleProgressBarChange} completeTask={props.completeTask} completed={task.completed} rgb={props.rgb} id={task.id} name={task.name} key={task.id}/>\n        })\n    }\n\n    return (\n        <div>\n            <EditGoalModal getCompletedGoalId={props.getCompletedGoalId} id={props.id} due_date={props.due_date} name={props.name} date={props.date} description={props.description} color={props.rgb} handleEditModalClose={handleEditModalClose} onHide={handleEditModalClose} handleEditModalShow={handleEditModalShow} show={editModalShow} />\n            <DeleteModal getCompletedGoalId={props.getCompletedGoalId} id={props.id} handleDeleteModalClose={handleDeleteModalClose} name={props.name} show={deleteModleOpen} />\n            <CompleteGoal id={props.id} completeGoal={completeGoal} show={completeModalShow} onHide={handleCompleteModalClose}  />\n            <Accordion >\n                <Accordion.Toggle className='goal-listgroup' style={{ backgroundColor: props.rgb}} eventKey={props.id} as={ListGroup.Item} >\n                    <div className=\"goal\" >\n                        <div className='goal-name'>\n                            {props.name}\n                        </div>\n                            <ProgressBar style={{backgroundColor: \"white\", color: props.rgb}} now={updateProgress()} />\n                        <div className=\"goal-due\">\n                            {props.due_date && <small>Due in {Math.ceil(calcDaysFromToday(props.due_date) + 1)} days</small>}\n                        </div>\n                    </div>\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey={props.id}>\n                    <Card.Body className=\"goal-body\" onClick={() => props.handleClickedGoalId(props.id)}>\n\n                    <Navbar expand=\"md\" className=\"justify-content-center\">\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                        <Navbar.Collapse id=\"basic-navbar-nav\" className=\"goal-navbar\">\n                            <Nav.Item>\n                                <LinkContainer to=\"goal-showpage\">\n                                    <Button variant=\"success\">Show</Button>\n                                </LinkContainer>                                    \n                            </Nav.Item>\n                            <Nav.Item><Button variant=\"primary\" onClick={props.handleTaskModalShow}>Add Task</Button></Nav.Item>\n                            <Nav.Item><Button variant=\"secondary\" onClick={handleEditModalShow}>Edit</Button></Nav.Item>\n                            <Nav.Item><Button variant=\"danger\" onClick={handleDeleteModalShow}>Delete</Button></Nav.Item>\n                        </Navbar.Collapse>\n                    </Navbar>\n                            \n                        {renderTasks()}\n\n                    </Card.Body>\n                </Accordion.Collapse>\n            </Accordion>\n        </div>\n    )\n}","import React, {useState, useEffect} from 'react'\nimport {Container, Row, Col, ListGroup, Button, Spinner} from 'react-bootstrap'\nimport { withRouter } from 'react-router-dom';\nimport Goal from './Goal'\n\n\nfunction Main(props) {\n\n    const [goals, setGoals] = useState([])\n    const [completedGoalId, setCompletedGoalId] = useState()\n    const [loading, setLoading] = useState(false)\n\n\n    const getCompletedGoalId = id => setCompletedGoalId(id)\n    useEffect(() => {\n        fetchGoals()\n    }, [])\n\n    useEffect(() => {\n        fetchGoals()\n    }, [props.removedTaskId])\n\n    useEffect(() => {\n        fetchGoals()\n    }, [props.newTaskId])\n\n    useEffect(() => {\n        fetchGoals()\n    }, [props.newGoalId])\n    \n\n    useEffect(() => {\n        fetchGoals()\n    }, [completedGoalId])\n\n    const fetchGoals = () => {\n        fetch(`https://wilson-rails.herokuapp.com/goals`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('wilsonUserToken')\n            }\n        })\n        .then(response => response.json())\n        .then(goals => {\n            if (goals.error) {\n                props.history.push('/login')\n                setLoading(false)\n            } else {\n                let goalsNotComplete = []\n                goals.forEach(goal => {\n                    if (!goal.completed) {\n                        goalsNotComplete.push(goal)\n                    }\n                })\n                setLoading(false)\n                setGoals(goalsNotComplete)\n            }\n        })\n        setLoading(true)\n    }\n\n    let renderGoals = () => {\n        if (goals.length > 0) {\n            return goals.map(goal => {\n                return <Goal getRemovedTaskId={props.getRemovedTaskId} description={goal.description} handleNewTaskId={props.handleNewTaskId} due_date={goal.due_date} getCompletedGoalId={getCompletedGoalId} handleCompleteModalShow={props.handleCompleteModalShow} completeTask={props.completeTask} handleClickedGoalId={props.handleClickedGoalId} tasks={goal.tasks} handleTaskModalShow={props.handleTaskModalShow}  rgb={goal.rgb} id={goal.id} handleGoalClick={props.handleGoalClick} date={goal.date} name={goal.name} key={goal.id} />\n            })\n        }\n    }\n\n    const renderMainTitle = () => {\n        if (loading) {\n            return (\n                <Col id='main-title-container'>\n                    <h1>Loading <Spinner animation=\"border\" variant=\"secondary\" /> Please wait... fetching from Heroku</h1>\n                </Col>    \n            )\n        } else {\n            \n            if (goals.length === 0) {\n                return (\n                    <Col id='main-title-container'>\n                        <h1>Click </h1>\n                            <Button variant=\"secondary\" id='main-title-button' onClick={props.handleGoalModalShow}>New Goal</Button>\n                        <h1>to create a Goal!</h1>                   \n                    </Col>\n                )\n            } else {\n                return (\n                <Col id='main-title-container'>\n                    <h1>{goals.length === 1 ? goals.length + ' Goal Remaining!' : goals.length + ' Goals Remaining'}</h1>\n                </Col>                \n                )\n    \n            }\n        }\n    }\n\n    return (\n        <Container fluid className=\"main\">\n            \n                {renderMainTitle()}\n            \n            <Row>\n            <Col>\n                <hr style={{borderTop: \"3px solid white\"}}/>\n                <ListGroup>\n                    {renderGoals()}\n                </ListGroup>\n            </Col>\n                \n            </Row>\n        </Container>\n    )\n}\nexport default withRouter(Main);","import React, { useState } from 'react'\nimport {Spinner, Form, Button, Modal} from 'react-bootstrap'\nimport { withRouter } from 'react-router-dom';\n\n\nfunction SignUp(props) {\n\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmedPassword, setConfirmedPassword] = useState('')\n    const [errors, setErrors] = useState({})\n    const [loading, setLoading] = useState(false);\n\n    const handleUsernameChange = e => setUsername(e.target.value)\n    const handlePasswordChange = e => setPassword(e.target.value)\n    const handleConfirmedPasswordChange = e => setConfirmedPassword(e.target.value)\n\n    const onSubmit = e => {\n        setErrors({})\n        e.preventDefault()\n        fetch(\"https://wilson-rails.herokuapp.com/users\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username: username,\n                password: password,\n                password_confirmation: confirmedPassword\n            })\n        })\n        .then(response => response.json())\n        .then(user => {\n            if (user.errors) {\n                setErrors(user.errors)\n            } else {\n                console.log(\"USER\", user)\n                props.setLoggedinUserId(user.id)\n                props.loginUser(username, password)\n                props.handleSignUpClose()\n            }\n            setLoading(false)\n        })\n        .catch(errors => {\n            setErrors(\"Database Error: Please try again later.\")\n            setLoading(false)\n        })\n        setLoading(true)\n    }\n\n    return (\n        <Modal\n            show={props.signUpShow}\n            onHide={props.handleSignUpClose}\n            backdrop=\"static\"\n            keyboard={false}\n            size='lg'\n            centered\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>Sign Up for Wilson!</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={onSubmit}>\n            \n                        <Form.Group >\n                            <Form.Label>Create Username:</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Enter username\" value={username} onChange={handleUsernameChange} />\n                            {errors.username && <p className=\"signup-error\">{errors.username[0]}</p>}\n                        </Form.Group>\n\n                        <Form.Group >\n                            <Form.Label>Password:</Form.Label>\n                            <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={handlePasswordChange} />\n                            {errors.password && <p className=\"signup-error\">{errors.password[0]}</p>}\n                        </Form.Group>\n\n                        <Form.Group >\n                            <Form.Label>Re-enter password:</Form.Label>\n                            <Form.Control type=\"password\" placeholder=\"Re-enter password\" value={confirmedPassword} onChange={handleConfirmedPasswordChange} />\n                            {errors.password_confirmation && <p className=\"signup-error\">{errors.password_confirmation[0]}</p>}\n                        </Form.Group>\n                            {loading ?   <Button variant=\"primary\" disabled><Spinner as=\"span\" animation=\"grow\" size=\"sm\" role=\"status\" aria-hidden=\"true\" /> Loading...</Button> : <Button id={'login-button'} variant=\"primary\" type=\"submit\">Sign Up</Button>}\n                    </Form>\n                </Modal.Body>\n                \n            </Modal>\n    )\n}\n\nexport default withRouter(SignUp);","import React, {useState} from 'react'\n\nimport {Form, Button, Container, Row, Col, Image, Spinner} from 'react-bootstrap'\nimport SignUp from './SignUp';\n\n\n\nexport default function Login(props) {\n\n    const [signUpShow, setSignUpShow] = useState(false)\n\n    const handleSignUpClose = () => setSignUpShow(false);\n    const handleSignUpShow = () => setSignUpShow(true);\n\n    \n    return (\n        <div>\n            <SignUp loginUser={props.loginUser} setLoggedinUserId={props.setLoggedinUserId} signUpShow={signUpShow} handleSignUpClose={handleSignUpClose}/>\n            <Container style={{backgroundColor: '#333', color: 'white', padding: '3%'}}>\n                <Row style={{marginBottom: \"3%\"}}>\n                    <Col sm={4} style={{textAlign: \"center\"}}>   \n                    <Image style={{height: \"200px\", width: \"200px\"}} src=\"wilson.png\" rounded />\n                    </Col>\n\n                    <Col sm={8} style={{margin: 'auto 0'}}>\n                        <h1>Welcome to <span style={{color: 'rgb(214, 17, 18)'}}>Wilson</span></h1>\n\n                        <h5>A simple app to keep track of your goals</h5>\n                    </Col>\n\n                </Row>\n                <Row>\n                    <Col id='login-container'>\n                        <Form onSubmit={props.handleSubmit} id='login-form'>\n                            <Form.Group controlId=\"username\">\n                            <Form.Label>Username:</Form.Label>\n                            <Form.Control type=\"username\" placeholder=\"Enter username\" name={'username'} value={props.username} onChange={props.handleUsernameChange} />\n                            </Form.Group>\n                            <Form.Group controlId=\"formBasicPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control type=\"password\" placeholder=\"Password\" name={'password'} value={props.password} onChange={props.handlePasswordChange} />\n                            </Form.Group>\n                            <div className=\"button-link-container\">\n                                {props.loggingIn ?   <Button variant=\"primary\" disabled><Spinner as=\"span\" animation=\"grow\" size=\"sm\" role=\"status\" aria-hidden=\"true\" /> Loading...</Button> : <Button id={'login-button'} variant=\"primary\" type=\"submit\">Login</Button>}\n                                <Button variant=\"danger\" onClick={handleSignUpShow}>Sign Up</Button>\n                            </div>\n                        </Form>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n    \n}\n","import React, { useState, useEffect }  from 'react'\nimport {ListGroup} from 'react-bootstrap'\n\n\nexport default function TaskCompleted(props) {\n    return (\n        <ListGroup.Item className='task' style={{  backgroundColor: props.rgb }} >\n            <div className=\"task-body-complete\">\n                {props.name}\n            </div>\n        </ListGroup.Item>\n    )\n}\n","import React from 'react'\nimport {Accordion, Card, Button, ProgressBar, ListGroup} from 'react-bootstrap'\nimport TaskCompleted from './TaskCompleted'\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nexport default function GoalCompleted(props) {\n\n    const renderCompletedTasks = () => {\n        return props.tasks.map(task => {\n            return <TaskCompleted key={task.id} name={task.name} rgb={props.rgb}/>\n        })\n    }\n\n    function getFormattedDate(d) {\n        var date = new Date(d);\n        var month = date.getMonth() + 1;\n        var day = date.getDate() + 1;\n        var year = date.getFullYear();\n        return month + \"/\" + day + \"/\" + year;\n    }\n\n    return (\n        <div style={{ padding: '0px', display: \"inline-block\"}}>\n            <Accordion>\n                <Accordion.Toggle style={{ backgroundColor: props.rgb}} className='goal-listgroup' eventKey={props.id} as={ListGroup.Item}>\n                    <div className=\"goal\" >\n                            <div className='goal-name'>\n                                {props.name}\n                            </div>\n\n                            <div className=\"goal-due\">\n                                Completed on: {getFormattedDate(props.completedDate)}\n                            </div>\n                    </div>\n\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey={props.id}>\n                    <Card.Body onClick={() => props.handleClickedGoalId(props.id)}>\n                            <LinkContainer to=\"goal-showpage\">\n                                <Button variant=\"danger\" >\n                                    Show\n                                </Button>\n                            </LinkContainer>\n                            \n                                \n                        {renderCompletedTasks()}\n\n                    </Card.Body>\n                </Accordion.Collapse>\n            </Accordion>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom';\nimport {Container, Row, Col, Jumbotron, Button, ListGroup} from 'react-bootstrap'\n\nimport Goal from './Goal'\nimport GoalCompleted from './GoalCompleted'\n\n\nfunction GoalShowPage(props) {\n\n    const [goal, setGoal] = useState('')\n\n    const [completedGoalId, setCompletedGoalId] = useState('')\n\n    const getCompletedGoalId = id => setCompletedGoalId(id)\n\n    useEffect(() => {\n        if (completedGoalId !== '') {\n            props.history.push('/')\n        }\n    }, [completedGoalId])\n\n    useEffect(() => {\n        fetchGoal()\n    }, [props.newTaskId])\n\n    const fetchGoal = () => {\n        fetch(`https://wilson-rails.herokuapp.com/goals/${props.clickedGoalid}`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('wilsonUserToken')\n            }\n        })\n        .then(response => response.json())\n        .then(goal => {\n            setGoal(goal)\n        })\n    }\n\n    const renderGoal = () => {\n        if (goal.completed) {\n            return <GoalCompleted key={goal.id} completedDate={goal.completed_date} handleClickedGoalId={props.handleClickedGoalId} tasks={goal.tasks} name={goal.name} id={goal.id} rgb={goal.rgb} />\n        } else {\n            return <Goal getCompletedGoalId={getCompletedGoalId} completeTask={props.completeTask} handleClickedGoalId={props.handleClickedGoalId} id={goal.id} tasks={goal.tasks} rgb={goal.rgb} name={goal.name} handleTaskModalShow={props.handleTaskModalShow} />\n        }\n    }\n\n    return (\n        <Container fluid style={{backgroundColor: '#333', padding: '50px'}}>\n            <Row>\n                <Col>\n                    <Jumbotron style={{ border: `solid ${goal.rgb} 4px`}}>\n                        <h1>{goal.name}</h1>\n                        <p>{goal.description}</p>\n                    </Jumbotron>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <ListGroup>\n                        {goal ? renderGoal() : null}\n                    </ListGroup>\n                </Col>\n\n            </Row>\n        </Container>\n    )    \n}\nexport default withRouter(GoalShowPage)","import React, { useState } from 'react'\nimport {Form, Button, Modal} from 'react-bootstrap'\n\nexport default function NewGoal(props) {\n\n    const [name, setName] = useState('')\n    const [description, setDescription] = useState('')\n    const [date, setDate] = useState('')\n    const [errors, setErrors] = useState({})\n    const [color, setColor] = useState('red') \n\n    const handleNameChange = e => setName(e.target.value)\n    const handleDescriptionChange = e => setDescription(e.target.value)\n    const handleDateChange = e => setDate(e.target.value)\n    const handleColorChange = e => setColor(e.target.value.toLowerCase())\n\n    const onSubmit = e => {\n        e.preventDefault()\n        fetch(\"https://wilson-rails.herokuapp.com/goals\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('wilsonUserToken')\n            },\n            body: JSON.stringify({\n                name: name,\n                description: description,\n                due_date: date,\n                rgb: color\n            })\n        })\n        .then(response => response.json())\n        .then(goal => {\n            if (goal.errors) {\n\n                setErrors(goal.errors)\n            } else {\n                props.handleNewGoalId(goal.id)\n                setName('')\n                setDescription('')\n                setDate('')\n                setErrors({})\n                props.onHide()\n            }\n        })\n    }\n\n    return (\n        <Modal show={props.show} onHide={props.onHide}>\n            <Modal.Header closeButton >\n            <Modal.Title>New Goal</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form onSubmit={onSubmit}>\n                    <Form.Group>\n                        <Form.Label>Goal Name:</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Goal Name\" value={name} onChange={handleNameChange} />\n                        {errors.name && <p className=\"signup-error\">{errors.name[0]}</p>}\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Goal Description</Form.Label>\n                        <Form.Control as=\"textarea\" rows={5} value={description} onChange={handleDescriptionChange}/>\n                        {errors.description && <p className=\"signup-error\">{errors.description[0]}</p>}\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Complete Goal By: </Form.Label>\n                        <Form.Control type=\"date\" onChange={handleDateChange} value={date} />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                        <Form.Label>Color</Form.Label>\n                        <Form.Control as=\"select\" onChange={handleColorChange}>\n                            <option>Red</option>\n                            <option>Orange</option>\n                            <option>Yellow</option>\n                            <option>Green</option>\n                            <option>Blue</option>\n                            <option>Purple</option>\n                            <option>Pink</option>\n                            <option>White</option>\n                            <option>Black</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <div className=\"button-error-container\">\n                        <Button variant=\"primary\" type=\"submit\" >\n                            Submit\n                        </Button>                     \n                    </div>\n                </Form>\n            </Modal.Body>               \n        </Modal>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport {Container, Row, Col, ListGroup} from 'react-bootstrap'\nimport GoalCompleted from './GoalCompleted'\nimport { withRouter } from 'react-router-dom';\n\nfunction Completed(props) {\n\n    const [completedGoals, setCompletedGoals] = useState([])\n\n    useEffect(() => {\n        fetchGoals()\n    }, [])\n\n    const fetchGoals = () => {\n        fetch(`https://wilson-rails.herokuapp.com/goals`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('wilsonUserToken')\n            }\n        })\n        .then(response => response.json())\n        .then(goals => {\n            if (goals.error) {\n                props.history.push('/login')\n            } else {\n                let goalsComplete = []\n                goals.forEach(goal => {\n                    if (goal.completed) {\n                        goalsComplete.push(goal)\n                    }\n                })\n            setCompletedGoals(goalsComplete)\n        }\n        })\n    }\n\n\n    const renderCompletedGoals = () => {\n        if (completedGoals.length > 0) {\n            return completedGoals.map(goal => {\n                return <GoalCompleted key={goal.id} completedDate={goal.completed_date} handleClickedGoalId={props.handleClickedGoalId} tasks={goal.tasks} name={goal.name} id={goal.id} rgb={goal.rgb} />\n            })\n        }\n    }\n    \n    return (\n        <Container fluid style={{backgroundColor: '#333', color: 'white', padding: '3%', minHeight: \"80vh\", width: \"100%\"}}>\n            <Col id='completed-title-container'>\n                <h1>Completed</h1>\n            </Col>\n\n            <Row>\n                <Col>\n                    <hr style={{borderTop: \"3px solid white\"}}/>\n                    <ListGroup>\n                        {renderCompletedGoals()}\n                    </ListGroup>\n                </Col>\n                \n            </Row>\n        </Container>\n    )        \n    \n}\n\nexport default withRouter(Completed);","import React, { useState } from 'react'\nimport {Modal, Button, Form} from 'react-bootstrap'\n\n\nexport default function NewTask(props) {\n    \n    const [name, setName] = useState('')\n    const [errors, setErrors] = useState({})\n\n    const handleChange = e => setName(e.target.value)\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        fetch(`https://wilson-rails.herokuapp.com/tasks`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"bearer \" + localStorage.getItem('wilsonUserToken')\n            },\n            body: JSON.stringify({\n                name: name,\n                goal_id: props.clickedGoalid\n            })\n        })\n        .then(response => response.json())\n        .then(task => {\n            \n            if (task.errors) {\n                setErrors(task.errors)\n            } else {\n                props.handleNewTaskId(task.id)\n                setName('')\n                setErrors('')         \n                props.onHide()\n                setErrors({})          \n            }\n        })\n    }\n\n    return (\n        <Modal show={props.show} onHide={props.onHide}>\n            <Modal.Header closeButton>\n            <Modal.Title>New Task</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form onSubmit={handleSubmit}>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Task:</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Enter Task\" name={'task'} value={name} onChange={handleChange} />\n                        {errors.name && <p className=\"signup-error\">{errors.name[0]}</p>}\n                    </Form.Group>\n                    <div className=\"button-error-container\">\n                        <Button variant=\"primary\" type=\"submit\" >\n                            Submit\n                        </Button>                     \n                    </div>\n                </Form>\n            </Modal.Body>               \n        </Modal>\n    )\n}","import React from 'react'\nimport {Modal, Button} from 'react-bootstrap'\n\nexport default function LoginErrors(props) {\n\n\n\n    return (\n        <Modal show={props.show} onHide={props.handleErrorClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Error:</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>{props.errors}</Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={props.handleErrorClose}>\n                    Close\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Route, withRouter } from 'react-router-dom';\nimport NavBar from './components/NavBar'\nimport Main from './components/Main'\nimport SignUp from './components/SignUp'\nimport Login from './components/Login'\nimport GoalShowPage from './components/GoalShowPage'\nimport NewGoal from './components/NewGoal'\nimport Completed from './components/Completed'\nimport NewTask from './components/NewTask'\nimport ModalErrors from './components/ModalErrors'\n\n\nfunction App(props) {\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [logginError, setLogginError] = useState(null)\n  const [loggedinUser, setLoggedinUser] = useState(null)\n  const [loggedinUserId, setLoggedinUserId] = useState(null)\n  const [clickedGoalid, setClickedGoalid] = useState('')\n  const [goalModalShow, setGoalModalShow] = useState(false)\n  const [taskModalShow, setTaskModalShow] = useState(false)\n  const [errorModalShow, setErrorModalShow] = useState(false)\n  const [newTaskId, setNewTaskId] = useState('')\n  const [newGoalId, setNewGoalId] = useState('')\n  const [removedTaskId, setRemovedTaskId] = useState(0)\n  const [loggingIn, setLoggingIn] = useState(false)  \n\n  const getRemovedTaskId = id => setRemovedTaskId(id)\n  \n  const handleTaskModalShow = () => setTaskModalShow(true)\n  const handleTaskModalClose = () => setTaskModalShow(false)\n  \n  const handleGoalModalShow = () => setGoalModalShow(true)\n  const handleGoalModalClose = () => setGoalModalShow(false)\n  \n  const handleUsernameChange = e => setUsername(e.target.value)\n  const handlePasswordChange = e => setPassword(e.target.value)\n  const handleClickedGoalId = id => setClickedGoalid(id)\n  const handleNewTaskId = id => setNewTaskId(id)\n  const handleNewGoalId = id => setNewGoalId(id)\n\n  const handleErrorClose = () => setErrorModalShow(false);\n  const handleErrorShow = () => setErrorModalShow(true);\n  \n\n\n  const logoutUser = () => {\n    setLoggedinUser(null)\n    localStorage.removeItem('wilsonUserToken')\n    props.history.push('/login')\n  }\n\n\n  useEffect(() => {\n    let storage = localStorage.getItem('wilsonUserToken')\n    if (storage) {\n      props.history.push('/')\n    } else {\n      props.history.push('/login')\n    }\n  }, [])\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    loginUser(username, password)\n  }\n\n  const verifyToken = token => {\n    if (token.token) {\n      localStorage.setItem('wilsonUserToken', token.token)\n      setLoggedinUserId(token.id)\n      setLogginError('')\n      props.history.push('/')\n      setUsername('')\n      setPassword('')\n      setLoggingIn(false)\n    } else {\n      setLogginError(token.message)\n      handleErrorShow()\n      setPassword('')\n      setLoggingIn(false)\n    }\n  }\n\n  const loginUser = (username, password) => {\n    fetch('https://wilson-rails.herokuapp.com/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({username, password}),\n    })\n    .then(response => response.json())\n    .then(token => {\n      verifyToken(token)\n    })\n    .catch((error) => setLogginError(error));\n    setLoggingIn(true)\n  }\n\n  useEffect(() => {\n    fetch(`https://wilson-rails.herokuapp.com/user`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': \"bearer \" + localStorage.getItem('wilsonUserToken')\n      }\n    })\n    .then(response => response.json())\n    .then(user => setLoggedinUser(user.username))\n  }, [loggedinUserId])\n\n  const completeTask = id => {\n    fetch(`https://wilson-rails.herokuapp.com/complete-task/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': \"bearer \" + localStorage.getItem('wilsonUserToken')\n      }\n    })\n  }\n\n\n  return (\n    <div>\n          <NavBar handleGoalModalShow={handleGoalModalShow} logoutUser={logoutUser} loggedinUser={loggedinUser}/>\n          <Route exact path=\"/login\" render={(routerProps) => <Login loginUser={loginUser} setLoggedinUserId={setLoggedinUserId} loggingIn={loggingIn} handleSubmit={handleSubmit} username={username} password={password} handleUsernameChange={handleUsernameChange} handlePasswordChange={handlePasswordChange} loggedinUser={loggedinUser} {...routerProps}/>} />\n          <Route exact path=\"/signup\" render={() => <SignUp />} />\n\n          <ModalErrors show={errorModalShow} handleErrorClose={handleErrorClose} errors={logginError} />\n          <NewTask handleNewTaskId={handleNewTaskId} show={taskModalShow} onHide={handleTaskModalClose} goalId={props.id} clickedGoalid={clickedGoalid} />\n          <NewGoal handleNewGoalId={handleNewGoalId} onHide={handleGoalModalClose} show={goalModalShow} loggedinUser={loggedinUser}/>\n          <Route exact path=\"/\" render={() => <Main removedTaskId={removedTaskId} getRemovedTaskId={getRemovedTaskId} handleNewTaskId={handleNewTaskId} newGoalId={newGoalId} newTaskId={newTaskId} completeTask={completeTask} handleClickedGoalId={handleClickedGoalId} handleTaskModalShow={handleTaskModalShow} handleGoalModalShow={handleGoalModalShow} />} />\n          <Route exact path=\"/goal-showpage\" render={() => <GoalShowPage completeTask={completeTask} newTaskId={newTaskId} handleClickedGoalId={handleClickedGoalId} handleTaskModalShow={handleTaskModalShow} clickedGoalid={clickedGoalid} />} />\n          <Route exact path=\"/completed\" render={() => <Completed handleClickedGoalId={handleClickedGoalId} loggedinUser={props.loggedinUser} handleGoalClick={props.handleGoalClick}/>} />     \n    </div>\n  );\n} \nexport default withRouter(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}><App /></Router>, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}